global
    maxconn                 {{ 10000 * ansible_processor_vcpus|int }}
    log                     127.0.0.1 local0

defaults
    mode                    http
    log                     global
    option                  httplog
    option                  dontlognull
    option                  http-server-close
    option                  redispatch
    retries                 10
    timeout http-request    1h
    timeout queue           1h
    timeout connect         60s
    timeout client          1h
    timeout server          1h
    timeout http-keep-alive 60s
    timeout check           60s
    maxconn                 {{ 10000 * ansible_processor_vcpus|int }}

listen stats
    bind {{ inventory_hostname }}:{{ lb_haproxy_stats_bind_address }}
    mode http
    balance {{ lb_haproxy_balance_alg }}
    stats enable
    stats refresh {{ lb_haproxy_stats_refresh }}s
    stats uri {{ lb_haproxy_stats_uri }}
    stats auth {{ lb_haproxy_stats_user }}:{{ lb_haproxy_stats_password }}
    stats admin if TRUE

{% if lb_kube_apiserver_healthcheck_port is defined -%}
frontend healthz
    bind {{ inventory_hostname }}:{{ lb_kube_apiserver_healthcheck_port }}
    mode http
    monitor-uri /healthz
{% endif %}

frontend kube_api_frontend
    bind {% if inventory_hostname in groups['load-balancer'] %}0.0.0.0{% else %}127.0.0.1{% endif %}:{{ kube_apiserver_port }}
    mode tcp
    option tcplog
    default_backend kube_api_backend

backend kube_api_backend
    mode tcp
    balance {{ lb_haproxy_balance_alg }}
    default-server inter 15s downinter 15s rise 2 fall 2 slowstart 60s maxconn 1000 maxqueue 256 weight 100
    option httpchk GET /healthz
    http-check expect status 200
{% for host in (groups['kube-master'] + groups['new-master']) %}
    server {{ host }} {% if hostvars[host]['ansible_host'] is defined %}{{ hostvars[host]['ansible_host'] }}{% else %}{{ host }}{% endif %}:6443 check check-ssl verify none
{% endfor %}

{% if enable_emqx | bool %}
listen emqx
    mode tcp
    bind {{ fsd_proxy_ip }}:{{ emqx_mqtt_port }}
    balance {{ lb_haproxy_balance_alg }}
    option tcplog
{% for host in (groups['emqx']) %}
    server {{ host }} {{ 'api' | filter_address(host) }}:{{ emqx_mqtt_port }} check inter 2000 rise 2 fall 5
{% endfor %}
{% endif %}

{% if enable_websockify | bool %}
listen websockify
    mode tcp
    bind {{ fsd_proxy_ip }}:{{ websockify_port }}
    balance source
    option tcplog
{% for host in (groups['websockify']) %}
    server {{ host }} {{ 'api' | filter_address(host) }}:{{ websockify_port }} check inter 2000 rise 2 fall 5
{% endfor %}
{% endif %}

{% if enable_fsd | bool %}
listen fsd-nginx
    mode tcp
    bind {{ fsd_proxy_ip }}:{{ fsd_nginx_port }}
    balance {{ lb_haproxy_balance_alg }}
    option tcplog
{% for host in (groups['fsd']) %}
    server {{ host }} {{ 'api' | filter_address(host) }}:{{ fsd_nginx_port }} check inter 2000 rise 2 fall 5
{% endfor %}
{% endif %}

{% if enable_btserver | bool %}
listen btserver
    mode tcp
    bind {{ fsd_proxy_ip }}:{{ btserver_listen_ports }}
    balance {{ lb_haproxy_balance_alg }}
    option tcplog
{% for host in (groups['btserver']) %}
    server {{ host }} {{ 'api' | filter_address(host) }} check port {{ btserver_listen_ports }} inter 2000 rise 2 fall 5
{% endfor %}

listen btserverport
    mode tcp
    bind {{ fsd_proxy_ip }}:{{ bt_server_port }}
    balance {{ lb_haproxy_balance_alg }}
    option tcplog
{% for host in (groups['btserver']) %}
    server {{ host }} {{ 'api' | filter_address(host) }}:{{ bt_server_port }} check inter 2000 rise 2 fall 5
{% endfor %}

listen btservertrackerport
    mode tcp
    bind {{ fsd_proxy_ip }}:{{ bt_tracker_port }}
    balance {{ lb_haproxy_balance_alg }}
    option tcplog
{% for host in (groups['btserver']) %}
    server {{ host }} {{ 'api' | filter_address(host) }}:{{ bt_tracker_port }} check inter 2000 rise 2 fall 5
{% endfor %}
{% endif %}