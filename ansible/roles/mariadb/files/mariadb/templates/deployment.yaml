apiVersion: apps/v1
kind: Deployment
metadata:
  name: mariadb
  namespace: {{ .Release.Namespace }}
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: mariadb
      app.kubernetes.io/component: mariadb
      app.kubernetes.io/release_group: mariadb
      app: mariadb
  template:
    metadata:
      labels:
        app.kubernetes.io/name: mariadb
        app.kubernetes.io/component: mariadb
        app.kubernetes.io/release_group: mariadb
        app: mariadb
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: app
                    operator: In
                    values:
                    - mariadb
              topologyKey: 'kubernetes.io/hostname'
      tolerations:
        - key: node.kubernetes.io/not-ready
          effect: NoExecute
          tolerationSeconds: {{ .Values.tolerationSeconds }}
        - key: node.kubernetes.io/unreachable
          operator: Exists
          effect: NoExecute
          tolerationSeconds: {{ .Values.tolerationSeconds }}
      containers:
      - image: {{ .Values.image.mariadb }}
        imagePullPolicy: IfNotPresent
        env:
          - name: BITNAMI_DEBUG
            value: "false"
          - name: MARIADB_ROOT_PASSWORD
            value: "{{ .Values.mariadb_password }}"
        livenessProbe:
          exec:
            command:
            - /bin/bash
            - -ec
            - |
              password_aux="${MARIADB_ROOT_PASSWORD:-}"
              if [[ -f "${MARIADB_ROOT_PASSWORD_FILE:-}" ]]; then
                  password_aux=$(cat "$MARIADB_ROOT_PASSWORD_FILE")
              fi
              mysqladmin status -uroot -p"${password_aux}"
          failureThreshold: 10
          initialDelaySeconds: 60
          periodSeconds: 60
          successThreshold: 1
          timeoutSeconds: 30
        readinessProbe:
          exec:
            command:
            - /bin/bash
            - -ec
            - |
              password_aux="${MARIADB_ROOT_PASSWORD:-}"
              if [[ -f "${MARIADB_ROOT_PASSWORD_FILE:-}" ]]; then
                  password_aux=$(cat "$MARIADB_ROOT_PASSWORD_FILE")
              fi
              mysqladmin status -uroot -p"${password_aux}"
          failureThreshold: 10
          initialDelaySeconds: 30
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 30
        name: mariadb
        ports:
        - containerPort: {{ .Values.service.mariadb.port }}
          name: {{ .Values.service.mariadb.name }}
          protocol: TCP
        securityContext:
          privileged: true
          runAsUser: 0
          readOnlyRootFilesystem: false
        volumeMounts:
        - mountPath: /bitnami/mariadb
          name: data
      dnsPolicy: ClusterFirstWithHostNet
      hostNetwork: true
      restartPolicy: Always
      {{- if .Values.image.pullSecrets }}
      imagePullSecrets:
        - name: {{ .Values.image.pullSecrets }}
      {{- end }}
      serviceAccount: mariadb
      serviceAccountName: mariadb
      priorityClassName: {{ .Values.priorityClassName }}
      volumes:
        {{- if .Values.persistentVolume.enabled }}
        - name: data
          persistentVolumeClaim: 
            claimName: {{ .Values.persistentVolume.name }}
        {{- else }}
        - name: data
          hostPath:
            path: /var/lib/mariadb
            type: DirectoryOrCreate
        {{- end }}
{{- if .Values.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.nodeSelector | indent 8 -}}
{{- end -}}
