- name: "统一时区为 {{ timezone }}"
  timezone:
    name: "{{ timezone }}"

- name: 禁用系统 swap
  shell: "swapoff -a && sysctl -w vm.swappiness=0"
  ignore_errors: true

- name: 删除 fstab swap 相关配置
  lineinfile:
    path: /etc/fstab
    regexp: 'swap'
    state: absent
    backup: yes

- name: 设置系统参数
  template: 
    src: 95-k8s-sysctl.conf.j2 
    dest: /etc/sysctl.d/95-k8s-sysctl.conf

- name: 生效系统参数
  shell: "sysctl -p /etc/sysctl.d/95-k8s-sysctl.conf"
  ignore_errors: true

- name: 添加集群节点 hostname 信息到 hosts 文件中
  blockinfile:
    path: /etc/hosts
    block: |-
      {% for item in (groups['all']|unique) -%}
      {% if hostvars[item]['ansible_host'] is defined -%}
      {{ hostvars[item]['ansible_host'] }} {{ hostvars[item]['inventory_hostname'] }} {{ hostvars[item]['inventory_hostname'] }}.{{ kube_dns_domain }}
      {% endif %}
      {% endfor %}
      {% for custom_hosts_ip, custom_hosts_addr in custom_hosts.items() %}
      {{ custom_hosts_ip }} {{ ([ custom_hosts_addr ] | flatten ) | join(' ') }}
      {% endfor %}
    state: present
    create: yes
    backup: yes
    marker: "# Ansible inventory hosts {mark}"

- name: 确认 hosts 文件中 localhost ipv4 配置正确
  lineinfile:
    dest: /etc/hosts
    line: "127.0.0.1 localhost localhost.localdomain"
    regexp: '^127.0.0.1.*$'
    state: present

- name: 确认 hosts 文件中 localhost ipv6 配置正确
  lineinfile:
    dest: /etc/hosts
    line: "::1 localhost6 localhost6.localdomain"
    regexp: '^::1.*$'
    state: present

- name: 创建 systemd 配置目录
  file: 
    name: /etc/systemd/system.conf.d 
    state: directory 

- name: 设置系统 ulimits
  template: 
    src: 30-k8s-ulimits.conf.j2
    dest: /etc/systemd/system.conf.d/30-k8s-ulimits.conf

- block:
  - name: 判断 ufw 是否安装
    shell: >
      systemctl status ufw | grep active || echo "not be found"
    register: ufw_already_installed
  
  - name: 禁用防火墙
    service:
      name: ufw
      state: stopped
      enabled: no
    when: '"active" in ufw_already_installed.stdout'
  when: "(firewalld_disabled | bool) | default(true)"
