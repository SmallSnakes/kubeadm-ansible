---
- name: Load all image
  community.docker.docker_image_load:
    path: "{{ docker_image_path }}"

- name: Run registry 容器
  docker_container: 
    image: "{{ kube_image_repository }}/registry:{{ kube_image_tag }}"
    name: registry    
    state: started
    restart: yes
    restart_policy: always
    ports:
      - "{{ docker_register_port }}:5000"
    volumes:
      - /opt/data/registry:/var/lib/registry  

- name: Get all image name 
  shell: "docker images  --format '{{ '{{' }}.Repository{{ '}}' }}':'{{ '{{' }}.Tag{{ '}}' }}' | grep {{ docker_register_domain }}"
  register: images_name

- name: push image with local repository
  docker_image:
    name: "{{ item }}"
    push: yes
    source: local
  with_items: "{{ images_name.stdout_lines }}"

- name: Run Ubuntu offline-deb-repo 容器
  docker_container: 
    image: "{{ kube_image_repository }}/offline-deb-repo:{{ kube_image_tag }}"
    name: offline-deb-repo    
    state: started
    restart: yes
    restart_policy: always
    ports:
      - "{{ offline_deb_repo_port }}:80"
  when:
    - ansible_distribution == "Ubuntu"

- name: Run openEuler offline-rpm-repo 容器
  docker_container: 
    image: "{{ kube_image_repository }}/openeuler-offline-rpm-repo:{{ kube_image_tag }}"
    name: openeuler-offline-rpm-repo
    state: started
    restart: yes
    restart_policy: always
    ports:
      - "{{ offline_deb_repo_port }}:80"
  when:
    - ansible_distribution == "openEuler"
