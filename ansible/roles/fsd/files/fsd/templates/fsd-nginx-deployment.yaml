apiVersion: apps/v1
kind: Deployment
metadata:
  name: fsd-nginx
  namespace: {{ .Release.Namespace }}
spec:
  selector:
    matchLabels:
      fsd: web
  strategy:
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 0
    type: RollingUpdate
  replicas: {{ .Values.replica }}
  template:
    metadata:
      labels:
        fsd: web
    spec:
      tolerations:
        - key: node.kubernetes.io/not-ready
          effect: NoExecute
          tolerationSeconds: {{ .Values.tolerationSeconds }}
        - key: node.kubernetes.io/unreachable
          operator: Exists
          effect: NoExecute
          tolerationSeconds: {{ .Values.tolerationSeconds }}
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: fsd
                    operator: In
                    values:
                    - web
              topologyKey: 'kubernetes.io/hostname'
      containers:
        - name: fsd-nginx
          image: {{ .Values.image.fsd_nginx }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: FSD_NGINX_NODEIP
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
            - name: FSD_NGINX_PORT
              value: "{{ .Values.service.fsd_nginx.port }}"
          command:
            - /bin/sh
            - -c
            - |
              /home/init/init.sh
              nginx
              tail -f /dev/null
          livenessProbe:
            httpGet:
              path: /
              port: {{ .Values.service.fsd_nginx.port }}
              scheme: HTTP
            failureThreshold: 5
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 15
          readinessProbe:
            httpGet:
              path: /
              port: {{ .Values.service.fsd_nginx.port }}
              scheme: HTTP
            failureThreshold: 5
            initialDelaySeconds: 60
            periodSeconds: 60
            successThreshold: 1
            timeoutSeconds: 15
          ports:
            - name: {{ .Values.service.fsd_nginx.name }}
              containerPort: {{ .Values.service.fsd_nginx.port }}
              protocol: TCP
          volumeMounts:
            - name: fsd-static
              mountPath: /usr/local/dist/static
            - name: fsd-voi
              mountPath: "{{ .Values.containerPath.voi }}"
      volumes:
        - name: fsd-static
          hostPath:
            path: {{ .Values.mount_dir.fsd_static }}
            type: DirectoryOrCreate
        - name: fsd-voi
          hostPath:
            path: {{ .Values.mount_dir.voi_dir }}
            type: DirectoryOrCreate
      securityContext: {}
      {{- if .Values.image.pullSecrets }}
      imagePullSecrets:
        - name: {{ .Values.image.pullSecrets }}
      {{- end }}
      {{- if .Values.hostNetwork }}
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
      {{- end }}
      priorityClassName: {{ .Values.priorityClassName }}
      serviceAccount: {{ .Values.serviceAccountName}}
      serviceAccountName: {{ .Values.serviceAccountName}}
{{- with .Values.nodeSelector }}
      nodeSelector:
{{- toYaml . | nindent 8 }}
{{- end }}