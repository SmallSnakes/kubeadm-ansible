apiVersion: v1
kind: ConfigMap
metadata:
  name: trochilus-etc
  namespace: {{ .Release.Namespace }}
data:
  trochilus.sh: |
    #!/bin/bash
    echo "
    [DEFAULT]
    debug = false
    [agent_rest_client]
    [agent_settings]
    bind_host = ${NODE_ID}
    bind_port = {{ .Values.service.trochilus_agent.port }}
    reserved_cores_num = {{ .Values.conf.agent_settings.reserved_cores_num }}
    enable_reserved_core = {{ .Values.conf.agent_settings.enable_reserved_core }}
    ipmi_username = {{ .Values.conf.agent_settings.ipmi_username }}
    ipmi_password = {{ .Values.conf.agent_settings.ipmi_password }}
    ipmi_vendor = {{ .Values.conf.agent_settings.ipmi_vendor }}
    host_username = {{ .Values.conf.agent_settings.host_username }}
    host_password = {{ .Values.conf.agent_settings.host_password }}
    agent_lock_file = /opt/trochilus/trochilus-agent-lock
    system =
    version =
    role =
    [api_settings]
    bind_host = ${NODE_ID}
    bind_port = {{ .Values.service.trochilus_api.port }}
    enabled_volume_backends = {{ .Values.conf.api_settings.enabled_volume_backends }}
    supported_instance_metadatas = k1, k2
    [database]
    connection = mysql+pymysql://{{ .Values.mariadb.database }}:{{ .Values.mariadb.password }}@mariadb:3306/{{ .Values.mariadb.database }}
    {{- if eq .Values.conf.api_settings.enabled_volume_backends .Values.lvm_backends }}
    [lvm1]
    volume_driver = {{ .Values.conf.lvm1.volume_driver }}
    volume_group = {{ .Values.conf.lvm1.volume_group }}
    thin_pool_lv = {{ .Values.conf.lvm1.thin_pool_lv }}
    lv_type = {{ .Values.conf.lvm1.lv_type }}
    [image_settings]
    enabled_image_store = filesystem
    filesystem_store_chunk_size = 65536
    filesystem_store_datadir = /var/lib/trochilus/images
    {{- end }}
    {{- if eq .Values.conf.api_settings.enabled_volume_backends .Values.rbd_backends }}
    [rbd1]
    rbd_ceph_conf = /etc/ceph/ceph.conf
    rbd_pool = {{ .Values.conf.rbd1.rbd_pool }}
    rbd_user = {{ .Values.conf.rbd1.rbd_user }}
    rbd_keyring_conf = /etc/ceph/ceph.client.admin.keyring
    rados_connect_timeout = -1
    volume_driver = {{ .Values.conf.rbd1.volume_driver }}
    [image_settings]
    enabled_image_store = {{ .Values.conf.image_settings.enabled_image_store }}
    rbd_store_config_file = /etc/ceph/ceph.conf
    rbd_store_user = {{ .Values.conf.image_settings.rbd_store_user }}
    rbd_store_pool = {{ .Values.conf.image_settings.rbd_store_pool }}
    rbd_store_chunk_size = 8
    rbd_store_conn_timeout = 0
    rbd_store_thin_provisioning = true
    {{- end }}
    [network_settings]
    disable_linux_bridge_stp = true
    dhcp_confs = {{ .Values.conf.network_settings.dhcp_confs }}
    support_flat_physicals = {{ .Values.networkConfig.flat_network_type }}
    physical_vlan_ranges = {{ .Values.networkConfig.vlan_network_type }}
    physical_interface_mappings =
    [vm_settings]
    virt_type = {{ .Values.conf.vm_settings.virt_type }}
    default_root_disk_backend = {{ .Values.conf.vm_settings.default_root_disk_backend }}
    rbd_secret_uuid = {{ .Values.conf.vm_settings.rbd_secret_uuid }}
    vnc_enabled = true
    vnc_server_listen = ${NODE_ID}
    spice_enabled = true
    spice_server_listen = ${NODE_ID}
    [voi_settings]
    voi_image_base_path = {{ .Values.conf.voi_settings.voi_image_base_path }}
    voi_vm_base_path = {{ .Values.conf.voi_settings.voi_vm_base_path }}
    vm_name_template = voi-%s
    [ha_settings]
    detected_mgmt_net_ip = {{ .Values.conf.ha_settings.detected_mgmt_net_ip }}
    ha_base_dir_path = {{ .Values.conf.ha_settings.ha_base_dir_path }}
    [system_settings]
    metallb_namespace = {{ .Values.conf.system_settings.metallb_namespace }}
    cgroup_path = {{ .Values.conf.system_settings.cgroup_path }}
    [webhook_settings]
    target_host = {{ .Values.conf.webhook_settings.target_host }}
    target_port = {{ .Values.conf.webhook_settings.target_port }}
    target_path = {{ .Values.conf.webhook_settings.target_path }}
    method = {{ .Values.conf.webhook_settings.method }}
    auth_token = {{ .Values.conf.webhook_settings.auth_token }}
    max_retries = 5
    retry_interval = 5
    request_conn_timeout = 10
    request_read_timeout = 60
    expected_codes = 200,202,204
    " > /etc/trochilus/trochilus.conf

    if [[ "$HOSTNAME" =~ .*$HOSTNAME.* ]]; then
      nic=`eval echo '$'${HOSTNAME}"_nic_info"`
      role=`eval echo '$'${HOSTNAME}"_node_role"`
      system=`eval echo '$'${HOSTNAME}"_system"`
      version=`eval echo '$'${HOSTNAME}"_version"`
      flat_nic=`eval echo '$'${HOSTNAME}"_flat_network_interface"`
      vlan_nic=`eval echo '$'${HOSTNAME}"_vlan_network_interface"`
    fi

    nics_info=`(echo $nic | sed "s/,/\ /g")`

    for key in ${nics_info[@]}; do
      sed -i "/role/a\nic = $key" /etc/trochilus/trochilus.conf
    done

    sed -i "s/role =/role = $role/g" /etc/trochilus/trochilus.conf
    sed -i "s/system =/system = $system/g" /etc/trochilus/trochilus.conf
    sed -i "s/version =/version = $version/g" /etc/trochilus/trochilus.conf

    {{- if and .Values.networkConfig.support_vlan_network .Values.networkConfig.support_flat_network }}
    sed -i "s/physical_interface_mappings =/physical_interface_mappings = $vlan_nic,$flat_nic/g" /etc/trochilus/trochilus.conf
    {{- else if .Values.networkConfig.support_vlan_network }}
    sed -i "s/physical_interface_mappings =/physical_interface_mappings = $vlan_nic/g" /etc/trochilus/trochilus.conf
    {{- else if .Values.networkConfig.support_flat_network }}
    sed -i "s/physical_interface_mappings =/physical_interface_mappings = $flat_nic/g" /etc/trochilus/trochilus.conf
    {{- end }}
