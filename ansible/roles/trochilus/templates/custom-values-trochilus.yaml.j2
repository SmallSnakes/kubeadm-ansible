#jinja2: trim_blocks: False
image:
  trochilus_api: {{ kube_image_repository }}/trochilus-api:{{ kube_image_tag }}
  trochilus_agent: {{ kube_image_repository }}/trochilus-agent:{{ kube_image_tag }}
  entrypoint: {{ kube_image_repository }}/kubernetes-entrypoint:{{ kube_image_tag }}
  db_init: {{ kube_image_repository }}/centos-source-kolla-toolbox:{{ kube_image_tag }}
  db_sync: {{ kube_image_repository }}/trochilus-agent:{{ kube_image_tag }}
  pullSecrets: {{ docker_register_secrets_name }}
  pullPolicy: "Always"

serviceAccountName: trochilus
tolerationSeconds: {{ kube_toleration_seconds }}
priorityClassName: {{ kube_priority_name }}
nodeSelector:
  trochilus_agent:
    {{ compute_node_role_name }}: {{ node_role_value }}
  trochilus_api:
    {{ control_node_role_name }}: {{ node_role_value }}
clusterDomainSuffix: cluster.local
replica: "{% if groups['trochilus-api'] | length > 2 %}2{% else %}1{% endif %}"

nodeInfo:
  {% for host in groups['trochilus-agent'] -%}
      {% set vlan_interface_dict = hostvars[host]['vlan_network_interface'] %}
      {% set flat_interface_list = hostvars[host]['flat_network_interface'] %}
      {% set api_interface = hostvars[host]['api_interface'] %}
  - {{ hostvars[host]['ansible_nodename'] }}:
      system: "{{ hostvars[host]['ansible_distribution'] }}"
      version: "{{ hostvars[host]['ansible_distribution_version'] }}"
      node_role: "{{ ['control', 'compute', 'storage'] | listintersection(hostvars[host]['group_names']) | join(',') }}"
      nic_info: "{{ hostvars[host]['nic_info'] | join(',') }}"
      vlan_network_interface: "{% for vlan_interface,vlan_range in vlan_interface_dict.items() %}{% if vlan_interface == api_interface %}{{ 'vlan' + loop.index | string }}:voi0{% else %}{{ 'vlan' + loop.index | string }}:{{ vlan_interface }}{% if not loop.last %},{% endif %}{% endif %}{% endfor %}" 
      flat_network_interface: "{% for flat_interface in flat_interface_list %}{% if flat_interface == api_interface %}{{'flat' + loop.index | string }}:voi0{% else %}{{ 'flat' + loop.index | string }}:{{ flat_interface }}{% if not loop.last %},{% endif %}{% endif %}{% endfor %}"
  {% endfor %}

networkConfig:
  support_vlan_network: {{ trochilus_support_vlan_network }}
  vlan_network_type: {% for vlan,vlan_ranges in vlan_network_interface.items() %}{% set index = loop.index %}{% for vlan_range in vlan_ranges %}{{ 'vlan' + index | string }}:{{ vlan_range }}{% if not loop.last %},{% endif %}{% endfor %}{% endfor %}
  support_flat_network: {{ trochilus_support_flat_network }}
  flat_network_type: {% for flat in flat_network_interface %}{{ 'flat' + loop.index | string }}{% if not loop.last %},{% endif %}{% endfor %}

mount_dir:
  voi_share_dir: {{ fsd_voi_dir }}
  voi_upload_dir: {{ fsd_upload_dir }}
container_dir:
  trochilus_share_dir: {{ trochilus_voi_base_path }}
  trochilus_upload_dir: {{ fsd_share_root_path }}/upload

dependencies:
  db_sync:
    jobs:
      - trochilus-db-init
  api:
    jobs:
      - trochilus-db-sync
  agent:
    jobs:
      - trochilus-db-sync

service:
  trochilus_api:
    port: {{ trochilus_api_listen_port }}
    name: api
  trochilus_agent:
    port: {{ trochilus_agent_listen_port }}
    name: agent

mariadb:
  root_password: {{ mariadb_root_password }}
  username: trochilus
  password: {{ mariadb_trochilus_password }}
  database: trochilus

conf:
  agent_settings:
    ipmi_username: {{ ipmi_username }}
    ipmi_password: {{ ipmi_password }}
    ipmi_vendor: {{ ipmi_vendor }}
    host_username: {{ system_username }}
    host_password: {{ system_password }}
  api_settings:
    enabled_volume_backends: rbd1
  image_settings:
    enabled_image_store: rbd
    rbd_store_config_file: /etc/ceph/ceph.conf
    rbd_store_user: admin
    rbd_store_pool: {{ osd_pools.images_pools.pool_name }}
  rbd1:
    rbd_ceph_conf: /etc/ceph/ceph.conf
    rbd_pool: {{ osd_pools.volume_pools.pool_name }}
    rbd_user: admin
    rbd_keyring_conf: /etc/ceph/ceph.client.admin.keyring
    rados_connect_timeout: -1
    volume_driver: trochilus.agent.storage.volume.drivers.rbd.RBDVolumeDriver
  vm_settings:
    virt_type: {{ trochilus_libvirt_driver }}
    default_root_disk_backend: rbd1
    rbd_secret_uuid: {{ ceph_rbd_secret_uuid }}
  voi_settings:
    voi_image_base_path: {{ trochilus_voi_base_path }}/images
    voi_vm_base_path: {{ trochilus_voi_base_path }}/vms
    vm_name_template: voi-%s
  webhook_settings:
    target_host: "{{ kube_apiserver_vip }}"
    target_port: {{ fsd_webhook_port }}
    target_path: /api/v1/webhook/
    method: post
    auth_token: {{ fsd_webhook_token }}
    max_retries: 5
    retry_interval: 5
    request_conn_timeout: 10
    request_read_timeout: 60
    expected_codes: 200,202,204

ingress:
  enabled: {{ trochilus_api_ingress }}
  ingressClassName: {{ ingress_class_name }}
