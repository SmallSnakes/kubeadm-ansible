#jinja2: trim_blocks: False

image:
  trochilus_api: {{ kube_image_repository }}/trochilus-api:{{ kube_image_tag }}
  trochilus_agent: {{ kube_image_repository }}/trochilus-agent:{{ kube_image_tag }}
  entrypoint: {{ kube_image_repository }}/kubernetes-entrypoint:{{ kube_image_tag }}
  db_init: {{ kube_image_repository }}/centos-source-kolla-toolbox:{{ kube_image_tag }}
  db_sync: {{ kube_image_repository }}/trochilus-agent:{{ kube_image_tag }}
  pullSecrets: {{ docker_register_secrets_name }}

serviceAccountName: trochilus
nodeSelector:
  trochilus_agent:
    {{ compute_node_role_name }}: {{ node_role_value }}
  trochilus_api:
    {{ control_node_role_name }}: {{ node_role_value }}
clusterDomainSuffix: cluster.local
replica: 2

nodeInfo:
  {% for host in groups['trochilus-agent'] -%}
  - {{ hostvars[host]['ansible_nodename'] }}:
      system: "{{ hostvars[host]['ansible_distribution'] }}"
      version: "{{ hostvars[host]['ansible_distribution_version'] }}"
      node_role: "{{ ['control', 'compute', 'storge'] | listintersection(hostvars[host]['group_names']) | join(',') }}"
      nic_info: "{{ hostvars[host]['nic_info'] | join(',') }}"
      {% if hostvars[host]['vlan_network_interface'] == "" and trochilus_vlan_network_interface != "" -%}
      vlan_network_interface: "{{ trochilus_vlan_network_interface }}"
      {%- else -%}
      vlan_network_interface: "{{ hostvars[host]['vlan_network_interface'] }}"
      {% endif -%}
      {% if hostvars[host]['flat_network_interface'] == "" and trochilus_flat_network_interface != "" -%}
      flat_network_interface: "{{ trochilus_flat_network_interface }}"
      {%- else -%}
      flat_network_interface: "{{ hostvars[host]['flat_network_interface'] }}"
      {% endif %}
  {% endfor %}

networkConfig:
  support_vlan_network: {{ trochilus_support_vlan_network }}
  vlan_network_type: vlan1
  vlan_network_interface: {{ trochilus_vlan_network_interface }}
  network_vlan_range: {{ trochilus_network_vlan_range }}
  support_flat_network: {{ trochilus_support_flat_network }}
  flat_network_type: flat1
  flat_network_interface: {{ trochilus_flat_network_interface }}

dependencies:
  db_sync:
    jobs:
      - trochilus-db-init
  api:
    jobs:
      - trochilus-db-sync
  agent:
    jobs:
      - trochilus-db-sync

service:
  trochilus_api:
    port: {{ trochilus_api_listen_port }}
    name: api
  trochilus_agent:
    port: {{ trochilus_agent_listen_port }}
    name: agent

mariadb:
  root_password: {{ mariadb_root_password }}
  username: trochilus
  password: {{ mariadb_trochilus_password }}
  database: trochilus

conf:
  api_settings:
    enabled_volume_backends: rbd1
  image_settings:
    enabled_image_store: rbd
    rbd_store_config_file: /etc/ceph/ceph.conf
    rbd_store_user: admin
    rbd_store_pool: {{ osd_pools.images_pools.pool_name }}
  rbd1:
    rbd_ceph_conf: /etc/ceph/ceph.conf
    rbd_pool: {{ osd_pools.volume_pools.pool_name }}
    rbd_user: admin
    rbd_keyring_conf: /etc/ceph/ceph.client.admin.keyring
    rados_connect_timeout: -1
    volume_driver: trochilus.agent.storage.volume.drivers.rbd.RBDVolumeDriver
  vm_settings:
    virt_type: {{ trochilus_libvirt_driver }}
    default_root_disk_backend: rbd1
    rbd_secret_uuid: {{ ceph_rbd_secret_uuid }}
  voi_settings:
    voi_image_base_path: /var/lib/trochilus/voi/images
    voi_vm_base_path: /var/lib/trochilus/voi/vms
    vm_name_template: voi-%s
  webhook_settings:
    target_host: ""
    target_port: {{ java_webhook_port }}
    target_path: /api/v1/webhook/
    method: post
    auth_token: {{ java_webhook_token }}
    max_retries: 5
    retry_interval: 5
    request_conn_timeout: 10
    request_read_timeout: 60
    expected_codes: 200,202,204

ingress:
  enabled: true
  ingressClassName: {{ ingress_class_name }}
