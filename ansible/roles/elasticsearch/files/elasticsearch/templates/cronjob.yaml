{{- if .Values.curator.enabled }}
apiVersion: {{ template "cronjob.apiVersion" . }}
kind: CronJob
metadata:
  name: elasticsearch-curator
  labels: 
    heritage: {{ .Release.Service | quote }}
    release: {{ .Release.Name | quote }}
    chart: "{{ .Chart.Name }}"
    app: curator
    app.kubernetes.io/component: curato
  {{- if .Values.curator.cronjob.annotations }}
  annotations: {{- toYaml .Values.curator.cronjob.annotations | nindent 4 }}
  {{- end }}
spec:
  schedule: "{{ .Values.curator.cronjob.schedule }}"
  {{- with .Values.curator.cronjob.concurrencyPolicy }}
  concurrencyPolicy: {{ . }}
  {{- end }}
  {{- with .Values.curator.cronjob.failedJobsHistoryLimit }}
  failedJobsHistoryLimit: {{ . }}
  {{- end }}
  {{- with .Values.curator.cronjob.successfulJobsHistoryLimit }}
  successfulJobsHistoryLimit: {{ . }}
  {{- end }}
  jobTemplate:
    metadata:
      labels: 
        heritage: {{ .Release.Service | quote }}
        release: {{ .Release.Name | quote }}
        chart: "{{ .Chart.Name }}"
        app: curator
        app.kubernetes.io/component: curato
    spec:
      template:
        metadata:
          labels: 
            heritage: {{ .Release.Service | quote }}
            release: {{ .Release.Name | quote }}
            chart: "{{ .Chart.Name }}"
            app: curator
            app.kubernetes.io/component: curat
          {{- if .Values.curator.podAnnotations }}
          annotations: {{- toYaml .Values.curator.podAnnotations | nindent 12 }}
          {{- end }}
        spec:
          volumes:
            - name: config-volume
              configMap:
                name: {{ template "elasticsearch.uname" . }}-curator
            {{- if .Values.curator.extraVolumes }}
            {{- toYaml .Values.curator.extraVolumes | nindent 12 }}
            {{- end }}
          restartPolicy: {{ .Values.curator.cronjob.jobRestartPolicy }}
          {{- if .Values.curator.priorityClassName }}
          priorityClassName: {{ .Values.curator.priorityClassName | quote }}
          {{- end }}
          {{- $initContainers := coalesce .Values.curator.initContainers .Values.curator.extraInitContainers -}}
          {{- if $initContainers }}
          initContainers: {{ .Values.initContainers }}
          {{- end }}
          {{- if .Values.curator.schedulerName }}
          schedulerName: {{ .Values.curator.schedulerName }}
          {{- end }}
          {{- if .Values.curator.rbac.enabled }}
          serviceAccountName: {{ include "elasticsearch.curator.serviceAccountName" . }}
          {{- end }}
          {{- if .Values.curator.affinity }}
          affinity: {{ .Values.curator.affinity }}
          {{- end }}
          {{- if .Values.curator.nodeSelector }}
          nodeSelector: {{ .Values.curator.nodeSelector }}
          {{- end }}
          {{- if .Values.curator.tolerations }}
          tolerations: {{ .Values.curator.tolerations }}
          {{- end }}
          {{- if .Values.curator.topologySpreadConstraints }}
          topologySpreadConstraints: {{ .Values.curator.topologySpreadConstraints }}
          {{- end }}
          {{- if .Values.curator.securityContext }}
          securityContext: {{- toYaml .Values.curator.securityContext | nindent 12 }}
          {{- end }}
          containers:
            - name: {{ template "elasticsearch.uname" . }}-curator
              image: {{ .Values.curator.image.image_name }}
              imagePullPolicy: {{ .Values.curator.image.pullPolicy | quote }}
              volumeMounts:
                - name: config-volume
                  mountPath: /etc/es-curator
                {{- if .Values.curator.extraVolumeMounts }}
                {{- toYaml .Values.curator.extraVolumeMounts | nindent 16 }}
                {{- end }}
              {{- if .Values.diagnosticMode.enabled }}
              command: {{- include "common.tplvalues.render" (dict "value" .Values.diagnosticMode.command "context" $) | nindent 16 }}
              {{ else if .Values.curator.command }}
              command: {{ toYaml .Values.curator.command | nindent 16 }}
              {{- end }}
              {{- if .Values.diagnosticMode.enabled }}
              args: {{- include "common.tplvalues.render" (dict "value" .Values.diagnosticMode.args "context" $) | nindent 16 }}
              {{- else if .Values.curator.dryrun }}
              args: [ "--dry-run", "--config", "/etc/es-curator/config.yml", "/etc/es-curator/action_file.yml" ]
              {{- else }}
              args: [ "--config", "/etc/es-curator/config.yml", "/etc/es-curator/action_file.yml" ]
              {{- end }}
              env:
                {{- if .Values.curator.env }}
                {{- range $key,$value := .Values.curator.env }}
                - name: {{ $key | upper | quote }}
                  value: {{ $value | quote }}
                {{- end }}
                {{- end }}
                {{- if .Values.curator.envFromSecrets }}
                {{- range $key,$value := .Values.curator.envFromSecrets }}
                - name: {{ $key | upper | quote }}
                  valueFrom:
                    secretKeyRef:
                      name: {{ $value.from.secret | quote }}
                      key: {{ $value.from.key | quote }}
                {{- end }}
                {{- end }}
              {{- if .Values.curator.resources }}
              resources: {{- toYaml .Values.curator.resources | nindent 16 }}
            {{- end }}
            {{- if .Values.curator.sidecars }}
            {{- include "common.tplvalues.render" ( dict "value" .Values.curator.sidecars "context" $) | nindent 12 }}
            {{- end }}
          {{- if .Values.pullSecrets }}
          imagePullSecrets:
            - name: {{ .Values.pullSecrets }}
          {{- end }}
  {{- end }}